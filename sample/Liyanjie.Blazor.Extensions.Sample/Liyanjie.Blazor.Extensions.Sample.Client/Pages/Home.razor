@page "/"
@using System.Text.Json
@inject IJSRuntime js
@inject ILogger<Home> logger

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<div @ref=@(div)>哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈</div>
window:@(windowString)
<br />
screen:@(screenString)
<br />
body:@(bodyString)
<br />
element:@(elementString)
<br />
domRect:@(domRectString)

@code {
    ElementReference div;
    string? windowString;
    string? screenString;
    string? bodyString;
    string? elementString;
    string? domRectString;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            var query = new BlazorQuery(js);

            var window = await query.GetWindowAsync();
            windowString = JsonSerializer.Serialize(window);
            logger.LogWarning(windowString);

            var screen = await query.GetScreenAsync();
            screenString = JsonSerializer.Serialize(screen);
            logger.LogWarning(screenString);

            var body = await query.GetBodyAsync();
            bodyString = JsonSerializer.Serialize(body);
            logger.LogWarning(bodyString);

            var element = await query.GetElementAsync(div);
            elementString = JsonSerializer.Serialize(element);
            logger.LogWarning(elementString);

            var domRect = await query.GetDOMRectAsync(div);
            domRectString = JsonSerializer.Serialize(domRect);
            logger.LogWarning(domRectString);

            await InvokeAsync(StateHasChanged);
        }
    }
}